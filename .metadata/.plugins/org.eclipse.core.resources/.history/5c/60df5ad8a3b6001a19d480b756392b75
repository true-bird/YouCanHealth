package com.matnagu.myHell.user;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.matnagu.myHell.routine.dto.RoutineDto;
import com.matnagu.myHell.user.dto.UserDto;
import com.matnagu.myHell.user.service.IUserService;

@Controller
@RequestMapping(value = "/user")
public class UserController {

	@Autowired
	private IUserService userServiceImpl;

	/*---------- 구현 예정 ----------*/

	// 내 정보 수정 화면
	@RequestMapping(value = "/updateUserInfo")
	public ModelAndView updateUserInfo(@RequestParam HashMap<String, Object> paramMap, HttpServletRequest request,
			Model model) {
		HttpSession session = request.getSession();
		String id = (String) session.getAttribute("userId");
		UserDto userDto = userServiceImpl.selectUserId(id);
		model.addAttribute("userDto", userDto);
		ModelAndView mv = new ModelAndView();
		mv.setViewName("users/updateUserInfo");
		return mv;
	}

	// 내 정보 수정
	@RequestMapping(value = "/updateUserResult")
	public ModelAndView updateUserResult(@RequestParam HashMap<String, Object> paramMap,@RequestParam("seq") int seq,@RequestParam("id1") String id1,@RequestParam("password") String password,
			HttpServletRequest request, Model model) {
		
		ModelAndView mv = new ModelAndView();
	    if(paramMap.get("userPassword").equals(password)) {
	    	//맟으면 수정될수있게
	    	userServiceImpl.updateUserInfo(paramMap);
	    	mv.setViewName("redirect:/user/userInfo");
	    	return mv;
	    }
	    
		String message = "비밀번호가 다릅니다";
		model.addAttribute("message", message);
		mv.setViewName("redirect:/user/updateUserInfo");
		return mv;
	}

	// 내가 좋아하는 운동 화면
	@RequestMapping(value = "/userFavoriteSports")
	public String userFavoriteSports() {
		return "users/userFavoriteSports";
	}

	// 내 루틴 목록 화면
	@RequestMapping(value = "/userRoutineList")
	public String userRoutineList(HttpSession session, Model model) {
		int userSeq = Integer.parseInt(((Map<String, String>) session.getAttribute("userInfo")).get("userSeq"));
		List<RoutineDto> routineList = userServiceImpl.selectUserRoutine(userSeq);
		model.addAttribute("routineList", routineList);
		return "users/userRoutineList";
	}

	// 고른 루틴 넣기
	@RequestMapping(value = "/insertUserRoutine")
	public String insertUserRoutine(@RequestParam(value = "routineId", required = false) int routineId,
			HttpSession session, Model model) {
		if (session.getAttribute("userInfo") == null)
			return "/";
		int userSeq = Integer.parseInt(((Map<String, String>) session.getAttribute("userInfo")).get("userSeq"));
		Map<String, Integer> userRoutine = new HashMap<String, Integer>();
		userRoutine.put("routineId", routineId);
		userRoutine.put("userSeq", userSeq);
		userServiceImpl.insertUserRoutine(userRoutine);
		return "redirect:/user/userRoutineList";
	}

	// 내 루틴 상세 화면
	@RequestMapping(value = "/userRoutineDetails")
	public String userRoutineDetails() {
		return "users/userRoutineDetails";
	}

	/*---------- 동훈 ----------*/
	// 내 정보 화면
	@RequestMapping(value = "/userInfo")
	public ModelAndView selectUserInfo(HttpServletRequest request, Model model) {
		HttpSession session = request.getSession();
		String id = ((Map<String, String>) session.getAttribute("userInfo")).get("userId");
		UserDto userinitDto = userServiceImpl.selectUserId(id);
		model.addAttribute("userinitDto", userinitDto);
		ModelAndView mv = new ModelAndView("users/userInfo");
		return mv;
	}
	/*------------------------*/
}
