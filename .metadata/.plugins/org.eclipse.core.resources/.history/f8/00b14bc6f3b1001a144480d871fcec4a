package com.matnagu.myHell.community;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.matnagu.myHell.comment.dto.CommentDto;
import com.matnagu.myHell.comment.service.CommentServiceImpl;
import com.matnagu.myHell.community.dto.CommunityDto;
import com.matnagu.myHell.community.service.CommunityServiceImpl;
import com.matnagu.myHell.user.dto.UserDto;
import com.matnagu.myHell.user.service.UserServiceImpl;

@Controller
@RequestMapping(value = "/community")
public class CommunityController {
	
	
	@Autowired
	private CommunityServiceImpl communityServiceImpl;
	@Autowired
	private CommentServiceImpl commentServiceImpl;
	@Autowired
	private UserServiceImpl userServiceImpl;
	
	
	
	// 글 쓰기
	@RequestMapping(value = "/createPost")
	public ModelAndView createPost(HttpServletRequest request, Model model) {
		HttpSession session=request.getSession();
		//System.out.println("myId3=" + myId);
		UserDto userDto = userServiceImpl.selectUserId((String)session.getAttribute("myId2")); //세션 정보를 받아서 같은 아이디 정보 가져오기
		model.addAttribute("userDto", userDto);
		String min = "0";
		String mex = "9";
		model.addAttribute("min", min);
		model.addAttribute("mex", mex);
		ModelAndView mv = new ModelAndView("community/createPost");
		return mv;
	}
	
	// 작성자가 쓴 글
	@RequestMapping(value = "/community/WritingContent") 
	public ModelAndView doWritingContent(@RequestParam HashMap<String, String> paramMap) {
		CommunityServiceImpl.insertWritingContent(paramMap);
		ModelAndView mv = new ModelAndView("redirect:/community/MainCommunity");
		return mv;
	}
	
	
	// 글 읽기
	@RequestMapping(value = "/readPost")
	public ModelAndView readPost(@RequestParam("seq") int seq, Model model,HttpServletRequest request) {
		CommunityDto communityDto = communityServiceImpl.selectCommunity(seq); // 해당 글 내용 담기
		communityServiceImpl.updateHit(seq);
		model.addAttribute("communityDto", communityDto);
		HttpSession session=request.getSession();
		//System.out.println("myId3=" + myId);
		UserDto userDto = userServiceImpl.selectUserId((String)session.getAttribute("myId2")); //세션 정보를 받아서 같은 아이디 정보 가져오기
		model.addAttribute("userDto", userDto);
		List<CommentDto> commentList = commentServiceImpl.selectCommentAllList(seq);// 글에 해당하는 댓글 담기

		if (commentList.size() > 0) { // 댓글이 0이면 담지 않는다.
			model.addAttribute("list", commentList);
		}

		ModelAndView mv = new ModelAndView("community/readPost");
		return mv;
	}
	
	// ��������
	@RequestMapping(value = "/Notice")
	public String notice() {
		return "community/Notice";
	}
	// �����
	@RequestMapping(value = "/HoneyTip")
	public String honeyTip() {
		return "community/HoneyTip";
	}
	// ���
	@RequestMapping(value = "/PassTime")
	public String passTime() {
		return "community/PassTime";
	}
}
